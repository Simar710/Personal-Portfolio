---
import Layout from "../components/Layout.astro";
import ProjectCard from "../components/ProjectCard";
import "../components/slideshow.js"; // Import the slideshow JavaScript

const projectData = [
  {
    id: "slideshow1",
    title: "EduGraph",
    description: "Full-stack web app: Parsed the data into csv files using python. Developed a Python-based CLI and Excel UI for course data management, integrated with a MySQL database and PHP REST API, featuring web applications for course recommendations, prerequisite graphs using vis.js, CI/CD pipeline on GitHub Action & GitLab CICD, deployed using Nginx on AWS.",
    slides: [
      { src: "EduGraph/home.png", alt: "Main Page" },
      { src: "EduGraph/tree.png", alt: "Course Tree" },
      { src: "EduGraph/courseGenerator.png", alt: "Course Generator Page" },
      { src: "EduGraph/courseTree.png", alt: "Course Tree Page" },
      { src: "EduGraph/APIDoc.png", alt: "API Documentation" },
      { src: "EduGraph/ics.png", alt: "Functionalities" },
      { src: "EduGraph/myPage.png", alt: "My Page" },
      { src: "EduGraph/Database.png", alt: "Database" },
    ],
    githubLink: "https://github.com/Simar710/EduGraph"
  },
  {
    id: "slideshow2",
    title: "Weapon Detection System",
    description: "A robust weapon detection and classification system using advanced Machine Learning techniques.",
    slides: [
      { src: "weaponDetection/val_batch0_labels.jpg", alt: "Val Batch Label" },
      { src: "weaponDetection/train_batch2.jpg", alt: "Training YOLO" },
      { src: "weaponDetection/results.png", alt: "Result" },
      { src: "weaponDetection/FFNN.png", alt: "FFNN" },
      { src: "weaponDetection/confusion_matrix_normalized.png", alt: "Normalised confusion matrix" },
      { src: "weaponDetection/confusion_matrix.png", alt: "Confusion Matrix" },
      { src: "weaponDetection/F1_curve.png", alt: "F1 Curve" },
      { src: "weaponDetection/labels_correlogram.jpg", alt: "Label Correlogram" },
      { src: "weaponDetection/labels.jpg", alt: "Labels" },
      { src: "weaponDetection/P_curve.png", alt: "P curve" },
      { src: "weaponDetection/PR_curve.png", alt: "PR curve" },
      { src: "weaponDetection/R_curve.png", alt: "R curve" },
    ],
    githubLink: "https://github.com/Simar710/Weapon-Detection-System"
  },
  {
    id: "slideshow3",
    title: "MediTrack",
    description: "a full-stack medication reminder and prescription management app with Next.js, Flutter, Node.js, and PostgreSQL.",
    slides: [
      { src: "MediTrack/Home.png", alt: "Home" },
      { src: "MediTrack/Signup.png", alt: "SignUp" },
      { src: "MediTrack/Login.png", alt: "Login" },
      { src: "MediTrack/PatientDashboard.png", alt: "Patient Dashboard" },
      { src: "MediTrack/PharmacistDashboard.png", alt: "Pharmacist Dashboard" },
    ],
    githubLink: "https://github.com/Simar710/MediTrack"
  },
  {
    id: "slideshow4",
    title: "ePortfolio",
    description: "GUI program to buy, sell, update, get total gain(profit) and search the investments.",
    slides: [
      { src: "GUI1.png", alt: "Main Page" },
      { src: "GUI2.png", alt: "Buy Page" },
      { src: "GUI3.png", alt: "Sell Page" },
      { src: "GUI4.png", alt: "Update Page" },
      { src: "GUI5.png", alt: "Profit Page" },
      { src: "GUI6.png", alt: "Search Page" },
    ],
    githubLink: "https://github.com/Simar710/ePortfolio"
  },
  {
    id: "slideshow5",
    title: "SVG Parser",
    description: "An application allows users to create, edit, and manipulate SVG files with ease, provides a versatile interface for working with scalable vector graphics, enabling precise and intuitive design modification",
    slides: [
    { src: "svgParser/Emoji_poo.svg", alt: "Poo Emoji SVG" },
    { src: "svgParser/hen_and_chicks.svg", alt: "Hen and chicks SVG" },
    { src: "svgParser/rects.svg", alt: "rect SVG" },
    { src: "svgParser/quad01.svg", alt: "quad SVG" },
    ],
    githubLink: "https://github.com/Simar710/SVG-Parser"
  },
  {
    id: "slideshow6",
    title: "GryphHub",
    description: "A University Website prototype performing various function in java",
    slides: [
      { src: "GryphHub/GryphHub.drawio.svg", alt: "GryphHub" },
      { src: "GryphHub/class-diagram.svg", alt: "Class Diagram" },
      { src: "GryphHub/Entity_Diagram.drawio.svg", alt: "Entity Diagram" },
      { src: "GryphHub/InputOfficeHours.drawio.svg", alt: "Input Office Hours Sequence  Diagram" },
      { src: "GryphHub/ViewCourses.drawio.svg", alt: "View Course Sequence Diagram" },
      { src: "GryphHub/DropCourse.drawio.svg", alt: "Drop Course Sequence Diagram" },
      { src: "GryphHub/ViewTimetable.drawio.svg", alt: "View Timetable Sequence Diagram" },
      { src: "GryphHub/IndicateConflict.drawio.svg", alt: "Indiacte Conflict Sequence Diagram" },
      { src: "GryphHub/RegisterCourse.drawio.svg", alt: "Register Course Sequence Diagram" },
      { src: "GryphHub/ViewClasslist.drawio.svg", alt: "View Classlist Sequence Diagram" },
    ],
    githubLink: "https://github.com/Simar710/GryphHub"
  },
];
---

<Layout>
  <section id="projects" class="projects-section">
    <div class="projects-content">
      <h2>My Projects</h2>
      <div class="project-grid">
        {projectData.map(project => (
          <ProjectCard
            id={project.id}
            title={project.title}
            description={project.description}
            slides={project.slides}
            githubLink={project.githubLink}
          />
        ))}
      </div>
      <div class="more-projects-button">
        <a href="/Personal-Portfolio/more-projects" class="btn stylish-btn">More Projects</a>
      </div>
    </div>
  </section>

  <!-- Run slideshow initialization after all components are rendered -->
  <script>
    import { startSlideshow } from "../components/slideshow.js";
    document.addEventListener("DOMContentLoaded", () => {
      const projectData = [
        { id: "slideshow1" },
        { id: "slideshow2" },
        { id: "slideshow3" },
        { id: "slideshow4" },
        { id: "slideshow5" },
        { id: "slideshow6" },
      ];
  
      projectData.forEach(project => startSlideshow(project.id));
    });
  </script>
  
</Layout>
